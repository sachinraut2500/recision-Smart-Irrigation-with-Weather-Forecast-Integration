# -*- coding: utf-8 -*-
"""recision Smart Irrigation with Weather Forecast Integration.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CEo7FKOrRJUiQ__kUVIKY5HE8EXWizH2
"""

"""
Smart Agriculture IoT System ðŸŒ±
--------------------------------
- ESP32 Node: Collects soil moisture + temperature + humidity
- Raspberry Pi Gateway: Subscribes to data, fetches weather forecast,
  and decides irrigation action
- Communication: MQTT via test.mosquitto.org (public broker)
"""

# ====================================================
# === ESP32 (MicroPython) Code - smart_irrigation_node.py
# ====================================================
# Upload this to ESP32 using Thonny or ampy

import machine, time
import network
from umqtt.simple import MQTTClient
import dht

BROKER = "test.mosquitto.org"
TOPIC = b"farm/soil"

soil_sensor = machine.ADC(machine.Pin(34))  # Soil moisture analog sensor
dht_sensor = dht.DHT11(machine.Pin(14))
relay = machine.Pin(26, machine.Pin.OUT)    # Relay to control pump

def connect_wifi():
    wlan = network.WLAN(network.STA_IF)
    wlan.active(True)
    wlan.connect("your-SSID", "your-PASSWORD")
    while not wlan.isconnected():
        time.sleep(1)
    print("âœ… WiFi Connected")

def main():
    connect_wifi()
    client = MQTTClient("farm-node01", BROKER)
    client.connect()
    print("ðŸ“¡ Connected to MQTT broker")

    while True:
        soil = soil_sensor.read()
        dht_sensor.measure()
        temp = dht_sensor.temperature()
        hum = dht_sensor.humidity()

        data = f"{soil},{temp},{hum}"
        client.publish(TOPIC, data)
        print("Sent:", data)

        # Local control (emergency)
        if soil < 2000:
            relay.value(1)  # Pump ON
        else:
            relay.value(0)  # Pump OFF

        time.sleep(10)

main()


# ====================================================
# === Raspberry Pi / Cloud Gateway - weather_control.py
# ====================================================
# Run this on Raspberry Pi (Python 3)

import paho.mqtt.client as mqtt
import requests
import json

BROKER = "test.mosquitto.org"
TOPIC = "farm/soil"

API_KEY = "your-weatherapi-key"
CITY = "Delhi"

def get_weather():
    url = f"http://api.weatherapi.com/v1/current.json?key={API_KEY}&q={CITY}"
    res = requests.get(url).json()
    return res["current"]["temp_c"], res["current"]["humidity"], res["current"]["precip_mm"]

def on_connect(client, userdata, flags, rc):
    print("âœ… Connected to MQTT Broker")
    client.subscribe(TOPIC)

def on_message(client, userdata, msg):
    soil, temp, hum = msg.payload.decode().split(",")
    soil, temp, hum = int(soil), float(temp), float(hum)
    print(f"ðŸ“¥ Received - Soil:{soil} | Temp:{temp}Â°C | Hum:{hum}%")

    # Get weather forecast
    w_temp, w_hum, w_rain = get_weather()
    print(f"ðŸŒ¦ Weather - Temp:{w_temp}Â°C | Hum:{w_hum}% | Rain:{w_rain}mm")

    # Smart Decision
    if soil < 2000 and w_rain < 1.0:
        action = "Irrigation ON ðŸ’§"
    else:
        action = "Irrigation OFF â›”"

    print("ðŸ¤– Decision:", action)

client = mqtt.Client()
client.on_connect = on_connect
client.on_message = on_message
client.connect(BROKER, 1883, 60)
client.loop_forever()